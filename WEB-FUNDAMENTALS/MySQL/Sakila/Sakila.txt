-- use sakila;


-- 1. What query would you run to get all the customers inside city_id = 312? Your query should return customer first name, last name, email, and address.

-- select * from customer;
-- select * from city;
-- select * from address;

-- select customer.first_name, customer.last_name, customer.email, address.address, city.city_id  
-- from address
-- join customer on address.address_id = customer.address_id
-- left join city on address.city_id = city.city_id
-- where city.city_id = 312;
---------------------------------------------------------------------------------------
-- 2. What query would you run to get all comedy films? Your query should return film title, description, release year, rating, special features, and genre (category).

-- select * from film;
-- select * from film_category;
-- select * from category;

-- select film.title as film_title, film.description, film.release_year, film.rating, film.special_features, 
-- category.name as genre from film
-- join film_category on film.film_id = film_category.film_id
-- left join category on film_category.category_id = category.category_id;
----------------------------------------------------------------------------------------
-- 3. What query would you run to get all the films joined by actor_id=5? Your query should return the actor id, actor name, film title, description, and release year.

-- select * from film;
-- select * from actor;
-- select * from film_actor;

-- select actor.actor_id, actor.first_name, actor.last_name, film.title as film_title, 
-- film.description, film.release_year from actor
-- join film_actor on actor.actor_id = film_actor.actor_id
-- left join film on film_actor.film_id = film.film_id 
-- where actor.actor_id = 5;
--------------------------------------------------------------------------------------------
-- 4. What query would you run to get all the customers in store_id = 1 and inside these cities (1, 42, 312 and 459)? Your query should return customer first name, last name, email, and address

-- select * from customer;
-- select * from store;
-- select * from city;
-- select * from address;

-- select customer.first_name, customer.last_name, customer.email, address.address, city.city_id, store.store_id
-- from customer
-- left join address on customer.address_id = address.address_id
-- left join city on address.city_id = city.city_id
-- left join store on address.address_id = store.address_id
-- where city.city_id in (1, 42, 312, 459) and store.store_id = 1;
----------------------------------------------------------------------------------------------
-- 5. What query would you run to get all the films with a "rating = G" and "special feature = behind the scenes", joined by actor_id = 15? Your query should return the film title, description, release year, rating, and special feature. Hint: You may use LIKE function in getting the 'behind the scenes' part.

-- select * from film;
-- select * from actor;
-- select * from film_actor;

-- select film.title as film_title, film.description, film.release_year, film.rating, film.special_features 
-- from film
-- left join film_actor on film.film_id = film_actor.film_id
-- left join actor on film_actor.actor_id = actor.actor_id
-- where actor.actor_id = 15 and film.rating = 'G' and film.special_features like "%behind the scenes%";
---------------------------------------------------------------------------------------
-- 6. What query would you run to get all the actors that joined in the film_id = 369? Your query should return the film_id, title, actor_id, and actor_name.

-- select * from actor;
-- select * from film;
-- select * from film_actor;

-- select film.film_id, film.title as film_title, actor.actor_id, 
-- CONCAT(actor.first_name, " ", actor.last_name) as actor_name
-- from film
-- left join film_actor on film.film_id = film_actor.film_id
-- left join actor on film_actor.actor_id = actor.actor_id
-- where film.film_id = 369;
-------------------------------------------------------------------------------------------
-- 7. What query would you run to get all drama films with a rental rate of 2.99? Your query should return film title, description, release year, rating, special features, and genre (category).

-- select * from film;
-- select * from category;
-- select * from film_category;

-- select film.title as film_title, film.description, film.release_year, film.rating, 
-- film.special_features, category.name as genre from film
-- left join film_category on film.film_id = film_category.film_id
-- left join category on film_category.category_id = category.category_id
-- where film.rental_rate = 2.99;
------------------------------------------------------------------------------
-- 8. What query would you run to get all the action films which are joined by SANDRA KILMER? Your query should return film title, description, release year, rating, special features, genre (category), and actor's first name and last name.

-- select * from film;
-- select * from actor;
-- select * from film_actor;
-- select * from category;
-- select * from film_category;

-- select film.title as film_title, film.description, film.release_year, film.rating, 
-- film.special_features, category.name as genre,
-- CONCAT(actor.first_name, " ", actor.last_name) as actor_name
-- from film
-- left join film_actor on film.film_id = film_actor.film_id
-- left join actor on film_actor.actor_id = actor.actor_id
-- left join film_category on film.film_id = film_category.film_id
-- left join category on film_category.category_id = category.category_id
-- where CONCAT(actor.first_name, " ", actor.last_name) = 'SANDRA KILMER' and category.name = 'Action';
-------------------------------------------------------------------------------------------------------